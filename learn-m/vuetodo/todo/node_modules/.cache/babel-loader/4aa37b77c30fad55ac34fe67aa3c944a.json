{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 1.0 样式引入\nimport \"./style/base.css\";\nimport \"./style/index.css\";\nimport TodoHeader from \"./components/TodoHeader\";\nimport TodoMain from \"./components/TodoMain\";\nimport TodoFooter from \"./components/TodoFooter\";\nexport default {\n  components: {\n    TodoHeader: TodoHeader,\n    TodoMain: TodoMain,\n    TodoFooter: TodoFooter\n  },\n  data: function data() {\n    return {\n      todoList: [{\n        id: 100,\n        name: \"数据结构学习\",\n        todoIsDone: true\n      }, {\n        id: 101,\n        name: \"计算机网络学习\",\n        todoIsDone: false\n      }, {\n        id: 102,\n        name: \"操作系统学习\",\n        todoIsDone: false\n      }],\n      showSta: \"all\"\n    };\n  },\n  methods: {\n    addTodoItem: function addTodoItem(todoItem) {\n      //添加任务方法\n      //注意 更新数组，和限制空任务输入\n      //获取最后一个\n      var id = this.todoList.length == 0 ? 100 : this.todoList[this.todoList.length - 1].id + 1;\n      console.log(id);\n      this.todoList.push({\n        id: id,\n        name: todoItem,\n        todoIsDone: false\n      });\n      console.log(todoItem);\n    },\n    rmTodoItem: function rmTodoItem(deId) {\n      console.log(deId);\n      var index = this.todoList.findIndex(function (obj) {\n        return obj.id === deId;\n      });\n      this.todoList.splice(index, 1);\n    },\n    itemClassShow: function itemClassShow(showSta) {\n      this.showSta = showSta;\n    },\n    delDoneItems: function delDoneItems() {\n      console.log(\"删除全部测试\");\n      this.$set(this.todoList = this.todoList.filter(function (obj) {\n        return obj.todoIsDone === true;\n      }));\n    }\n  },\n  computed: {\n    showMainList: function showMainList() {\n      //根据显示状态 更新数组 底部统计也需要返回\n      if (this.showSta === 'yes') {\n        return this.todoList.filter(function (obj) {\n          return obj.todoIsDone === true;\n        });\n      } else if (this.showSta === 'no') {\n        return this.todoList.filter(function (obj) {\n          return obj.todoIsDone === false;\n        });\n      } else {\n        return this.todoList;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;AAUA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACAA;AACAC,0BADA;AAEAC,sBAFA;AAGAC;AAHA,GADA;AAMAC,MANA,kBAMA;AACA;AACAC,iBACA;AAAAC;AAAAC;AAAAC;AAAA,OADA,EAEA;AAAAF;AAAAC;AAAAC;AAAA,OAFA,EAGA;AAAAF;AAAAC;AAAAC;AAAA,OAHA,CADA;AAMAC;AANA;AAQA,GAfA;AAgBAC;AACAC,eADA,uBACAC,QADA,EACA;AACA;AACA;AACA;AACA;AACAC;AACA;AACAP,cADA;AAEAC,sBAFA;AAGAC;AAHA;AAKAK;AACA,KAbA;AAcAC,cAdA,sBAcAC,IAdA,EAcA;AACAF;AACA;AAAA;AAAA;AACA;AACA,KAlBA;AAmBAG,iBAnBA,yBAmBAP,OAnBA,EAmBA;AACA;AACA,KArBA;AAsBAQ,gBAtBA,0BAsBA;AACAJ;AACA;AACA;AACA,OAFA;AAGA;AA3BA,GAhBA;AA6CAK;AACAC,gBADA,0BACA;AACA;AACA;AACA;AACA;AACA,SAFA;AAGA,OAJA,MAIA;AACA;AACA;AACA,SAFA;AAGA,OAJA,MAIA;AACA;AACA;AACA;AAdA;AA7CA","names":["components","TodoHeader","TodoMain","TodoFooter","data","todoList","id","name","todoIsDone","showSta","methods","addTodoItem","todoItem","console","rmTodoItem","deId","itemClassShow","delDoneItems","computed","showMainList"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <section class=\"todoapp\">\n    <!-- 除了驼峰, 还可以使用-转换链接 -->\n    <TodoHeader @addTodoItem=\"addTodoItem\"></TodoHeader>\n    <TodoMain :todoList=\"showMainList\" @rmTodoItem=\"rmTodoItem\"></TodoMain>\n    <TodoFooter :todoList=\"showMainList\" @itemClassShow=\"itemClassShow\" @delDoneItems=\"delDoneItems\"></TodoFooter>\n  </section>\n</template>\n\n<script>\n// 1.0 样式引入\nimport \"./style/base.css\"\nimport \"./style/index.css\"\n    \nimport TodoHeader from \"./components/TodoHeader\";\nimport TodoMain from \"./components/TodoMain\";\nimport TodoFooter from \"./components/TodoFooter\";\n\n\nexport default {\n  components: {\n    TodoHeader,\n    TodoMain,\n    TodoFooter,\n  },\n  data () {\n    return {\n      todoList:[\n        {id:100,name:\"数据结构学习\",todoIsDone:true},\n        {id:101,name:\"计算机网络学习\",todoIsDone:false},\n        {id:102,name:\"操作系统学习\",todoIsDone:false},\n      ],\n      showSta:\"all\",\n    }\n  },\n  methods: {\n    addTodoItem(todoItem){\n      //添加任务方法\n      //注意 更新数组，和限制空任务输入\n      //获取最后一个\n      let id = this.todoList.length == 0?100:this.todoList[this.todoList.length-1].id+1;\n      console.log(id);\n      this.todoList.push({\n        id:id,\n        name:todoItem,\n        todoIsDone:false\n      })\n      console.log(todoItem)\n    },\n    rmTodoItem(deId){\n      console.log(deId)\n      let index = this.todoList.findIndex(obj=>obj.id===deId)\n      this.todoList.splice(index,1)\n    },\n    itemClassShow(showSta){\n      this.showSta=showSta\n    },\n    delDoneItems(){\n      console.log(\"删除全部测试\")\n      this.$set(this.todoList=this.todoList.filter(obj=>{\n        return obj.todoIsDone===true\n      }))\n    }\n  },\n  computed: {\n    showMainList(){\n      //根据显示状态 更新数组 底部统计也需要返回\n      if(this.showSta==='yes'){\n          return this.todoList.filter(obj=>{\n            return obj.todoIsDone===true\n          })\n      }else if(this.showSta==='no'){\n          return this.todoList.filter(obj=>{\n            return obj.todoIsDone===false\n          })\n      }else {\n        return this.todoList\n      }\n    }\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}